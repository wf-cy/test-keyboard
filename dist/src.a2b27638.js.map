{"version":3,"sources":["../../webpack/universalModuleDefinition","../../webpack/bootstrap","services/PhysicalKeyboard.js","services/KeyboardLayout.js","services/Utilities.js","components/Keyboard.js","index.js","src/index.js","../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/css-loader.js","../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PhysicalKeyboard","simpleKeyboardInstance","_classCallCheck","this","initKeyboardListener","getSimpleKeyboardLayoutKey","_this","document","addEventListener","event","options","physicalKeyboardHighlight","buttonPressed","dispatch","instance","buttonDOM","getButtonElement","concat","style","backgroundColor","physicalKeyboardHighlightBgColor","color","physicalKeyboardHighlightTextColor","removeAttribute","output","code","includes","toUpperCase","Number","isInteger","length","toLowerCase","KeyboardLayout","default","shift","Utilities","Utilities_classCallCheck","bindMethods","myClass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","getOwnPropertyNames","iterator","next","done","myMethod","err","return","button","buttonTypeClass","buttonWithoutBraces","replace","buttonNormalized","{bksp}","{backspace}","{enter}","{shift}","{shiftleft}","{shiftright}","{alt}","{s}","{tab}","{lock}","{capslock}","{accept}","{space}","{//}","{esc}","{escape}","{f1}","{f2}","{f3}","{f4}","{f5}","{f6}","{f7}","{f8}","{f9}","{f10}","{f11}","{f12}","{numpaddivide}","{numlock}","{arrowup}","{arrowleft}","{arrowdown}","{arrowright}","{prtscr}","{scrolllock}","{pause}","{insert}","{home}","{pageup}","{delete}","{end}","{pagedown}","{numpadmultiply}","{numpadsubtract}","{numpadadd}","{numpadenter}","{period}","{numpaddecimal}","{numpad0}","{numpad1}","{numpad2}","{numpad3}","{numpad4}","{numpad5}","{numpad6}","{numpad7}","{numpad8}","{numpad9}","display","mergeDisplay","assign","getDefaultDiplay","input","caretPos","moveCaret","removeAt","addStringAt","tabCharOnTab","newLineOnEnter","minus","newCaretPos","updateCaretPosAction","syncInstanceInputs","caretPosition","debug","console","log","keyboardDOMClass","source","string","position","slice","join","isMaxLengthReached","updateCaretPos","emojiMatchedReg","substring","match","substr","inputObj","updatedInput","maxLength","currentInput","inputName","condition","maxLengthReached","_typeof","Boolean","navigator","maxTouchPoints","PointerEvent","trim","split","reduce","word","array","x","SimpleKeyboard","Keyboard_classCallCheck","registerModule","initCallback","keyboardDOMQuery","arguments","Keyboard_typeof","utilities","keyboardDOM","querySelector","layoutName","theme","preventMouseDownDefault","keyboardPluginClasses","buttonElements","warn","Error","render","camelCase","physicalKeyboardInterface","loadModules","onKeyPress","getUpdatedInput","inputPattern","inputPatternIsValid","handleMaxLength","onChange","onChangeAll","e","_this2","preventDefault","stopMouseDownPropagation","stopPropagation","isMouseHold","holdInteractionTimeout","clearTimeout","holdTimeout","disableButtonHold","setTimeout","handleButtonHold","_this3","handleButtonClicked","_this4","replaceInput","onSetOptions","innerHTML","className","callback","keys","forEach","buttons","_this5","classNameItem","buttonTheme","classNameFound","map","class","buttonThemeArray","push","_this6","Array","isArray","index","filteredButtonArray","filter","item","splice","buttonArr","inputVal","inputPatternRaw","RegExp","didInputMatch","test","simpleKeyboardInstances","caretEventHandler","targetTagName","target","tagName","disableCaretPositioning","selectionStart","removeEventListener","clear","_this7","buttonThemesParsed","themeObj","themeButtons","themeButton","themeParsed","countInArray","processAutoTouchEvents","disableContextualWindow","oncontextmenu","classList","contains","autoUseTouchEvents","useTouchEvents","handleCaret","onInit","isTouchDevice","onTouchDeviceDetected","beforeFirstRender","pointerEventsSupported","useMouseEvents","beforeRender","onRender","onModulesLoaded","_this8","Module","constructor","classStr","init","prop","rowDOM","rowIndex","containerStartIndexes","containerEndIndexes","_this9","rowDOMArray","from","children","removedElements","startIndex","arrIndex","endIndex","updated_startIndex","updated_endIndex","containerDOM","createElement","containerUID","setAttribute","containedElements","element","appendChild","_this10","initialized","layoutClass","layout","getDefaultLayout","useTouchEventsClass","disableRowButtonContainers","getButtonTheme","row","rIndex","rowArray","bIndex","buttonHasContainerStart","buttonHasContainerEnd","fctBtnClass","getButtonClass","buttonThemeClass","buttonDisplayName","getButtonDisplayName","buttonType","useButtonTag","ontouchstart","handleButtonMouseDown","ontouchend","handleButtonMouseUp","ontouchcancel","onclick","onmousedown","onpointerdown","onpointerup","onpointercancel","buttonUID","buttonSpanDOM","parseRowDOMContainers","onmouseup","keyboard","Keyboard","setInput","handleShift","currentLayout","shiftToggle","setOptions","bundleURL","getBundleURLCached","getBundleURL","matches","stack","getBaseURL","url","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","OVERLAY_ID","OldModule","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","parents","k","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleKeyboard\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Physical Keyboard Service\r\n */\r\nclass PhysicalKeyboard {\r\n  /**\r\n   * Creates an instance of the PhysicalKeyboard service\r\n   */\r\n  constructor(simpleKeyboardInstance) {\r\n    /**\r\n     * @type {object} A simple-keyboard instance\r\n     */\r\n    this.simpleKeyboardInstance = simpleKeyboardInstance;\r\n\r\n    /**\r\n     * Bindings\r\n     */\r\n    this.initKeyboardListener = this.initKeyboardListener.bind(this);\r\n    this.getSimpleKeyboardLayoutKey = this.getSimpleKeyboardLayoutKey.bind(\r\n      this\r\n    );\r\n\r\n    /**\r\n     * Initialize key listeners\r\n     */\r\n    this.initKeyboardListener();\r\n  }\r\n\r\n  /**\r\n   * Initializes key event listeners\r\n   */\r\n  initKeyboardListener() {\r\n    // Adding button style on keydown\r\n    document.addEventListener(\"keydown\", event => {\r\n      if (this.simpleKeyboardInstance.options.physicalKeyboardHighlight) {\r\n        let buttonPressed = this.getSimpleKeyboardLayoutKey(event);\r\n\r\n        this.simpleKeyboardInstance.dispatch(instance => {\r\n          let buttonDOM =\r\n            instance.getButtonElement(buttonPressed) ||\r\n            instance.getButtonElement(`{${buttonPressed}}`);\r\n\r\n          if (buttonDOM) {\r\n            buttonDOM.style.backgroundColor =\r\n              this.simpleKeyboardInstance.options\r\n                .physicalKeyboardHighlightBgColor || \"#9ab4d0\";\r\n            buttonDOM.style.color =\r\n              this.simpleKeyboardInstance.options\r\n                .physicalKeyboardHighlightTextColor || \"white\";\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Removing button style on keyup\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (this.simpleKeyboardInstance.options.physicalKeyboardHighlight) {\r\n        let buttonPressed = this.getSimpleKeyboardLayoutKey(event);\r\n\r\n        this.simpleKeyboardInstance.dispatch(instance => {\r\n          let buttonDOM =\r\n            instance.getButtonElement(buttonPressed) ||\r\n            instance.getButtonElement(`{${buttonPressed}}`);\r\n\r\n          if (buttonDOM && buttonDOM.removeAttribute) {\r\n            buttonDOM.removeAttribute(\"style\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Transforms a KeyboardEvent's \"key.code\" string into a simple-keyboard layout format\r\n   * @param  {object} event The KeyboardEvent\r\n   */\r\n  getSimpleKeyboardLayoutKey(event) {\r\n    let output;\r\n\r\n    if (\r\n      event.code.includes(\"Numpad\") ||\r\n      event.code.includes(\"Shift\") ||\r\n      event.code.includes(\"Space\") ||\r\n      event.code.includes(\"Backspace\") ||\r\n      event.code.includes(\"Control\") ||\r\n      event.code.includes(\"Alt\") ||\r\n      event.code.includes(\"Meta\")\r\n    ) {\r\n      output = event.code;\r\n    } else {\r\n      output = event.key;\r\n    }\r\n\r\n    /**\r\n     * If button is not uppercase, casting to lowercase\r\n     */\r\n    if (\r\n      output !== output.toUpperCase() ||\r\n      (event.code[0] === \"F\" &&\r\n        Number.isInteger(Number(event.code[1])) &&\r\n        event.code.length <= 3)\r\n    ) {\r\n      output = output.toLowerCase();\r\n    }\r\n\r\n    return output;\r\n  }\r\n}\r\n\r\nexport default PhysicalKeyboard;\r\n","/**\r\n * Keyboard Layout Service\r\n */\r\nclass KeyboardLayout {\r\n  /**\r\n   * Get default simple-keyboard layout\r\n   * @return {object} The default layout (US-QWERTY)\r\n   */\r\n  static getDefaultLayout() {\r\n    return {\r\n      default: [\r\n        \"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\r\n        \"{tab} q w e r t y u i o p [ ] \\\\\",\r\n        \"{lock} a s d f g h j k l ; ' {enter}\",\r\n        \"{shift} z x c v b n m , . / {shift}\",\r\n        \".com @ {space}\"\r\n      ],\r\n      shift: [\r\n        \"~ ! @ # $ % ^ & * ( ) _ + {bksp}\",\r\n        \"{tab} Q W E R T Y U I O P { } |\",\r\n        '{lock} A S D F G H J K L : \" {enter}',\r\n        \"{shift} Z X C V B N M < > ? {shift}\",\r\n        \".com @ {space}\"\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport default KeyboardLayout;\r\n","/**\r\n * Utility Service\r\n */\r\nclass Utilities {\r\n  /**\r\n   * Creates an instance of the Utility service\r\n   */\r\n  constructor(simpleKeyboardInstance) {\r\n    /**\r\n     * @type {object} A simple-keyboard instance\r\n     */\r\n    this.simpleKeyboardInstance = simpleKeyboardInstance;\r\n\r\n    /**\r\n     * Bindings\r\n     */\r\n    Utilities.bindMethods(Utilities, this);\r\n  }\r\n\r\n  /**\r\n   * Adds default classes to a given button\r\n   *\r\n   * @param  {string} button The button's layout name\r\n   * @return {string} The classes to be added to the button\r\n   */\r\n  getButtonClass(button) {\r\n    let buttonTypeClass =\r\n      button.includes(\"{\") && button.includes(\"}\") && button !== \"{//}\"\r\n        ? \"functionBtn\"\r\n        : \"standardBtn\";\r\n    let buttonWithoutBraces = button.replace(\"{\", \"\").replace(\"}\", \"\");\r\n    let buttonNormalized = \"\";\r\n\r\n    if (buttonTypeClass !== \"standardBtn\")\r\n      buttonNormalized = ` hg-button-${buttonWithoutBraces}`;\r\n\r\n    return `hg-${buttonTypeClass}${buttonNormalized}`;\r\n  }\r\n\r\n  /**\r\n   * Default button display labels\r\n   */\r\n  getDefaultDiplay() {\r\n    return {\r\n      \"{bksp}\": \"backspace\",\r\n      \"{backspace}\": \"backspace\",\r\n      \"{enter}\": \"< enter\",\r\n      \"{shift}\": \"shift\",\r\n      \"{shiftleft}\": \"shift\",\r\n      \"{shiftright}\": \"shift\",\r\n      \"{alt}\": \"alt\",\r\n      \"{s}\": \"shift\",\r\n      \"{tab}\": \"tab\",\r\n      \"{lock}\": \"caps\",\r\n      \"{capslock}\": \"caps\",\r\n      \"{accept}\": \"Submit\",\r\n      \"{space}\": \" \",\r\n      \"{//}\": \" \",\r\n      \"{esc}\": \"esc\",\r\n      \"{escape}\": \"esc\",\r\n      \"{f1}\": \"f1\",\r\n      \"{f2}\": \"f2\",\r\n      \"{f3}\": \"f3\",\r\n      \"{f4}\": \"f4\",\r\n      \"{f5}\": \"f5\",\r\n      \"{f6}\": \"f6\",\r\n      \"{f7}\": \"f7\",\r\n      \"{f8}\": \"f8\",\r\n      \"{f9}\": \"f9\",\r\n      \"{f10}\": \"f10\",\r\n      \"{f11}\": \"f11\",\r\n      \"{f12}\": \"f12\",\r\n      \"{numpaddivide}\": \"/\",\r\n      \"{numlock}\": \"lock\",\r\n      \"{arrowup}\": \"↑\",\r\n      \"{arrowleft}\": \"←\",\r\n      \"{arrowdown}\": \"↓\",\r\n      \"{arrowright}\": \"→\",\r\n      \"{prtscr}\": \"print\",\r\n      \"{scrolllock}\": \"scroll\",\r\n      \"{pause}\": \"pause\",\r\n      \"{insert}\": \"ins\",\r\n      \"{home}\": \"home\",\r\n      \"{pageup}\": \"up\",\r\n      \"{delete}\": \"del\",\r\n      \"{end}\": \"end\",\r\n      \"{pagedown}\": \"down\",\r\n      \"{numpadmultiply}\": \"*\",\r\n      \"{numpadsubtract}\": \"-\",\r\n      \"{numpadadd}\": \"+\",\r\n      \"{numpadenter}\": \"enter\",\r\n      \"{period}\": \".\",\r\n      \"{numpaddecimal}\": \".\",\r\n      \"{numpad0}\": \"0\",\r\n      \"{numpad1}\": \"1\",\r\n      \"{numpad2}\": \"2\",\r\n      \"{numpad3}\": \"3\",\r\n      \"{numpad4}\": \"4\",\r\n      \"{numpad5}\": \"5\",\r\n      \"{numpad6}\": \"6\",\r\n      \"{numpad7}\": \"7\",\r\n      \"{numpad8}\": \"8\",\r\n      \"{numpad9}\": \"9\"\r\n    };\r\n  }\r\n  /**\r\n   * Returns the display (label) name for a given button\r\n   *\r\n   * @param  {string} button The button's layout name\r\n   * @param  {object} display The provided display option\r\n   * @param  {boolean} mergeDisplay Whether the provided param value should be merged with the default one.\r\n   */\r\n  getButtonDisplayName(button, display, mergeDisplay) {\r\n    if (mergeDisplay) {\r\n      display = Object.assign({}, this.getDefaultDiplay(), display);\r\n    } else {\r\n      display = display || this.getDefaultDiplay();\r\n    }\r\n\r\n    return display[button] || button;\r\n  }\r\n\r\n  /**\r\n   * Returns the updated input resulting from clicking a given button\r\n   *\r\n   * @param  {string} button The button's layout name\r\n   * @param  {string} input The input string\r\n   * @param  {object} options The simple-keyboard options object\r\n   * @param  {number} caretPos The cursor's current position\r\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\r\n   */\r\n  getUpdatedInput(button, input, options, caretPos, moveCaret) {\r\n    let output = input;\r\n\r\n    if (\r\n      (button === \"{bksp}\" || button === \"{backspace}\") &&\r\n      output.length > 0\r\n    ) {\r\n      output = this.removeAt(output, caretPos, moveCaret);\r\n    } else if (button === \"{space}\")\r\n      output = this.addStringAt(output, \" \", caretPos, moveCaret);\r\n    else if (\r\n      button === \"{tab}\" &&\r\n      !(\r\n        typeof options.tabCharOnTab === \"boolean\" &&\r\n        options.tabCharOnTab === false\r\n      )\r\n    ) {\r\n      output = this.addStringAt(output, \"\\t\", caretPos, moveCaret);\r\n    } else if (\r\n      (button === \"{enter}\" || button === \"{numpadenter}\") &&\r\n      options.newLineOnEnter\r\n    )\r\n      output = this.addStringAt(output, \"\\n\", caretPos, moveCaret);\r\n    else if (\r\n      button.includes(\"numpad\") &&\r\n      Number.isInteger(Number(button[button.length - 2]))\r\n    ) {\r\n      output = this.addStringAt(\r\n        output,\r\n        button[button.length - 2],\r\n        caretPos,\r\n        moveCaret\r\n      );\r\n    } else if (button === \"{numpaddivide}\")\r\n      output = this.addStringAt(output, \"/\", caretPos, moveCaret);\r\n    else if (button === \"{numpadmultiply}\")\r\n      output = this.addStringAt(output, \"*\", caretPos, moveCaret);\r\n    else if (button === \"{numpadsubtract}\")\r\n      output = this.addStringAt(output, \"-\", caretPos, moveCaret);\r\n    else if (button === \"{numpadadd}\")\r\n      output = this.addStringAt(output, \"+\", caretPos, moveCaret);\r\n    else if (button === \"{numpaddecimal}\")\r\n      output = this.addStringAt(output, \".\", caretPos, moveCaret);\r\n    else if (button === \"{\" || button === \"}\")\r\n      output = this.addStringAt(output, button, caretPos, moveCaret);\r\n    else if (!button.includes(\"{\") && !button.includes(\"}\"))\r\n      output = this.addStringAt(output, button, caretPos, moveCaret);\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Moves the cursor position by a given amount\r\n   *\r\n   * @param  {number} length Represents by how many characters the input should be moved\r\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\r\n   */\r\n  updateCaretPos(length, minus) {\r\n    let newCaretPos = this.updateCaretPosAction(\r\n      this.simpleKeyboardInstance,\r\n      length,\r\n      minus\r\n    );\r\n\r\n    if (this.simpleKeyboardInstance.options.syncInstanceInputs) {\r\n      this.simpleKeyboardInstance.dispatch(instance => {\r\n        instance.caretPosition = newCaretPos;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Action method of updateCaretPos\r\n   *\r\n   * @param  {object} instance The instance whose position should be updated\r\n   * @param  {number} length Represents by how many characters the input should be moved\r\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\r\n   */\r\n  updateCaretPosAction(instance, length, minus) {\r\n    if (minus) {\r\n      if (instance.caretPosition > 0)\r\n        instance.caretPosition = instance.caretPosition - length;\r\n    } else {\r\n      instance.caretPosition = instance.caretPosition + length;\r\n    }\r\n\r\n    if (this.simpleKeyboardInstance.options.debug) {\r\n      console.log(\r\n        \"Caret at:\",\r\n        instance.caretPosition,\r\n        `(${instance.keyboardDOMClass})`\r\n      );\r\n    }\r\n\r\n    return instance.caretPosition;\r\n  }\r\n\r\n  /**\r\n   * Adds a string to the input at a given position\r\n   *\r\n   * @param  {string} source The source input\r\n   * @param  {string} string The string to add\r\n   * @param  {number} position The (cursor) position where the string should be added\r\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\r\n   */\r\n  addStringAt(source, string, position, moveCaret) {\r\n    let output;\r\n\r\n    if (!position && position !== 0) {\r\n      output = source + string;\r\n    } else {\r\n      output = [source.slice(0, position), string, source.slice(position)].join(\r\n        \"\"\r\n      );\r\n\r\n      /**\r\n       * Avoid caret position change when maxLength is set\r\n       */\r\n      if (!this.isMaxLengthReached()) {\r\n        if (moveCaret) this.updateCaretPos(string.length);\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Removes an amount of characters at a given position\r\n   *\r\n   * @param  {string} source The source input\r\n   * @param  {number} position The (cursor) position from where the characters should be removed\r\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\r\n   */\r\n  removeAt(source, position, moveCaret) {\r\n    if (this.simpleKeyboardInstance.caretPosition === 0) {\r\n      return source;\r\n    }\r\n\r\n    let output;\r\n    let prevTwoChars;\r\n    let emojiMatched;\r\n    let emojiMatchedReg = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;\r\n\r\n    /**\r\n     * Emojis are made out of two characters, so we must take a custom approach to trim them.\r\n     * For more info: https://mathiasbynens.be/notes/javascript-unicode\r\n     */\r\n    if (position && position >= 0) {\r\n      prevTwoChars = source.substring(position - 2, position);\r\n      emojiMatched = prevTwoChars.match(emojiMatchedReg);\r\n\r\n      if (emojiMatched) {\r\n        output = source.substr(0, position - 2) + source.substr(position);\r\n        if (moveCaret) this.updateCaretPos(2, true);\r\n      } else {\r\n        output = source.substr(0, position - 1) + source.substr(position);\r\n        if (moveCaret) this.updateCaretPos(1, true);\r\n      }\r\n    } else {\r\n      prevTwoChars = source.slice(-2);\r\n      emojiMatched = prevTwoChars.match(emojiMatchedReg);\r\n\r\n      if (emojiMatched) {\r\n        output = source.slice(0, -2);\r\n        if (moveCaret) this.updateCaretPos(2, true);\r\n      } else {\r\n        output = source.slice(0, -1);\r\n        if (moveCaret) this.updateCaretPos(1, true);\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n  /**\r\n   * Determines whether the maxLength has been reached. This function is called when the maxLength option it set.\r\n   *\r\n   * @param  {object} inputObj\r\n   * @param  {object} options\r\n   * @param  {string} updatedInput\r\n   */\r\n  handleMaxLength(inputObj, options, updatedInput) {\r\n    let maxLength = options.maxLength;\r\n    let currentInput = inputObj[options.inputName];\r\n    let condition = currentInput.length === maxLength;\r\n\r\n    if (\r\n      /**\r\n       * If pressing this button won't add more characters\r\n       * We exit out of this limiter function\r\n       */\r\n      updatedInput.length <= currentInput.length\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    if (Number.isInteger(maxLength)) {\r\n      if (options.debug) {\r\n        console.log(\"maxLength (num) reached:\", condition);\r\n      }\r\n\r\n      if (condition) {\r\n        /**\r\n         * @type {boolean} Boolean value that shows whether maxLength has been reached\r\n         */\r\n        this.maxLengthReached = true;\r\n        return true;\r\n      } else {\r\n        this.maxLengthReached = false;\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (typeof maxLength === \"object\") {\r\n      let condition = currentInput.length === maxLength[options.inputName];\r\n\r\n      if (options.debug) {\r\n        console.log(\"maxLength (obj) reached:\", condition);\r\n      }\r\n\r\n      if (condition) {\r\n        this.maxLengthReached = true;\r\n        return true;\r\n      } else {\r\n        this.maxLengthReached = false;\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current value of maxLengthReached\r\n   */\r\n  isMaxLengthReached() {\r\n    return Boolean(this.maxLengthReached);\r\n  }\r\n\r\n  /**\r\n   * Determines whether a touch device is being used\r\n   */\r\n  isTouchDevice() {\r\n    return \"ontouchstart\" in window || navigator.maxTouchPoints;\r\n  }\r\n\r\n  /**\r\n   * Determines whether pointer events are supported\r\n   */\r\n  pointerEventsSupported() {\r\n    return window.PointerEvent;\r\n  }\r\n\r\n  /**\r\n   * Bind all methods in a given class\r\n   */\r\n\r\n  static bindMethods(myClass, instance) {\r\n    for (let myMethod of Object.getOwnPropertyNames(myClass.prototype)) {\r\n      let excludeMethod =\r\n        myMethod === \"constructor\" || myMethod === \"bindMethods\";\r\n      if (!excludeMethod) {\r\n        instance[myMethod] = instance[myMethod].bind(instance);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transforms an arbitrary string to camelCase\r\n   *\r\n   * @param  {string} string The string to transform.\r\n   */\r\n  camelCase(string) {\r\n    return string\r\n      .toLowerCase()\r\n      .trim()\r\n      .split(/[.\\-_\\s]/g)\r\n      .reduce((string, word) =>\r\n        word.length ? string + word[0].toUpperCase() + word.slice(1) : string\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Counts the number of duplicates in a given array\r\n   *\r\n   * @param  {Array} array The haystack to search in\r\n   * @param  {string} value The needle to search for\r\n   */\r\n  countInArray(array, value) {\r\n    return array.reduce((n, x) => n + (x === value), 0);\r\n  }\r\n}\r\n\r\nexport default Utilities;\r\n","import \"./Keyboard.css\";\r\n\r\n// Services\r\nimport PhysicalKeyboard from \"../services/PhysicalKeyboard\";\r\nimport KeyboardLayout from \"../services/KeyboardLayout\";\r\nimport Utilities from \"../services/Utilities\";\r\n\r\n/**\r\n * Root class for simple-keyboard\r\n * This class:\r\n * - Parses the options\r\n * - Renders the rows and buttons\r\n * - Handles button functionality\r\n */\r\nclass SimpleKeyboard {\r\n  /**\r\n   * Creates an instance of SimpleKeyboard\r\n   * @param {Array} params If first parameter is a string, it is considered the container class. The second parameter is then considered the options object. If first parameter is an object, it is considered the options object.\r\n   */\r\n  constructor(...params) {\r\n    let keyboardDOMQuery =\r\n      typeof params[0] === \"string\" ? params[0] : \".simple-keyboard\";\r\n    let options = typeof params[0] === \"object\" ? params[0] : params[1];\r\n\r\n    if (!options) options = {};\r\n\r\n    /**\r\n     * Initializing Utilities\r\n     */\r\n    this.utilities = new Utilities(this);\r\n\r\n    /**\r\n     * Processing options\r\n     */\r\n    this.keyboardDOM = document.querySelector(keyboardDOMQuery);\r\n\r\n    /**\r\n     * @type {object}\r\n     * @property {object} layout Modify the keyboard layout.\r\n     * @property {string} layoutName Specifies which layout should be used.\r\n     * @property {object} display Replaces variable buttons (such as {bksp}) with a human-friendly name (e.g.: “backspace”).\r\n     * @property {boolean} mergeDisplay By default, when you set the display property, you replace the default one. This setting merges them instead.\r\n     * @property {string} theme A prop to add your own css classes to the keyboard wrapper. You can add multiple classes separated by a space.\r\n     * @property {Array} buttonTheme A prop to add your own css classes to one or several buttons.\r\n     * @property {boolean} debug Runs a console.log every time a key is pressed. Displays the buttons pressed and the current input.\r\n     * @property {boolean} newLineOnEnter Specifies whether clicking the “ENTER” button will input a newline (\\n) or not.\r\n     * @property {boolean} tabCharOnTab Specifies whether clicking the “TAB” button will input a tab character (\\t) or not.\r\n     * @property {string} inputName Allows you to use a single simple-keyboard instance for several inputs.\r\n     * @property {number} maxLength Restrains all of simple-keyboard inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\r\n     * @property {object} maxLength Restrains simple-keyboard’s individual inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\r\n     * @property {boolean} syncInstanceInputs When set to true, this option synchronizes the internal input of every simple-keyboard instance.\r\n     * @property {boolean} physicalKeyboardHighlight Enable highlighting of keys pressed on physical keyboard.\r\n     * @property {boolean} preventMouseDownDefault Calling preventDefault for the mousedown events keeps the focus on the input.\r\n     * @property {string} physicalKeyboardHighlightTextColor Define the text color that the physical keyboard highlighted key should have.\r\n     * @property {string} physicalKeyboardHighlightBgColor Define the background color that the physical keyboard highlighted key should have.\r\n     * @property {function(button: string):string} onKeyPress Executes the callback function on key press. Returns button layout name (i.e.: “{shift}”).\r\n     * @property {function(input: string):string} onChange Executes the callback function on input change. Returns the current input’s string.\r\n     * @property {function} onRender Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\r\n     * @property {function} onInit Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\r\n     * @property {function(inputs: object):object} onChangeAll Executes the callback function on input change. Returns the input object with all defined inputs.\r\n     * @property {boolean} useButtonTag Render buttons as a button element instead of a div element.\r\n     * @property {boolean} disableCaretPositioning A prop to ensure characters are always be added/removed at the end of the string.\r\n     * @property {object} inputPattern Restrains input(s) change to the defined regular expression pattern.\r\n     * @property {boolean} useTouchEvents Instructs simple-keyboard to use touch events instead of click events.\r\n     * @property {boolean} autoUseTouchEvents Enable useTouchEvents automatically when touch device is detected.\r\n     * @property {boolean} useMouseEvents Opt out of PointerEvents handling, falling back to the prior mouse event logic.\r\n     * @property {function} destroy Clears keyboard listeners and DOM elements.\r\n     * @property {boolean} disableButtonHold Disable button hold action.\r\n     */\r\n    this.options = options;\r\n    this.options.layoutName = this.options.layoutName || \"default\";\r\n    this.options.theme = this.options.theme || \"hg-theme-default\";\r\n    this.options.inputName = this.options.inputName || \"default\";\r\n    this.options.preventMouseDownDefault =\r\n      this.options.preventMouseDownDefault || false;\r\n\r\n    /**\r\n     * @type {object} Classes identifying loaded plugins\r\n     */\r\n    this.keyboardPluginClasses = \"\";\r\n\r\n    /**\r\n     * Bindings\r\n     */\r\n    Utilities.bindMethods(SimpleKeyboard, this);\r\n\r\n    /**\r\n     * simple-keyboard uses a non-persistent internal input to keep track of the entered string (the variable `keyboard.input`).\r\n     * This removes any dependency to input DOM elements. You can type and directly display the value in a div element, for example.\r\n     * @example\r\n     * // To get entered input\r\n     * let input = keyboard.getInput();\r\n     *\r\n     * // To clear entered input.\r\n     * keyboard.clearInput();\r\n     *\r\n     * @type {object}\r\n     * @property {object} default Default SimpleKeyboard internal input.\r\n     * @property {object} myInputName Example input that can be set through `options.inputName:\"myInputName\"`.\r\n     */\r\n    this.input = {};\r\n    this.input[this.options.inputName] = \"\";\r\n\r\n    /**\r\n     * @type {string} DOM class of the keyboard wrapper, normally \"simple-keyboard\" by default.\r\n     */\r\n    this.keyboardDOMClass = keyboardDOMQuery.split(\".\").join(\"\");\r\n\r\n    /**\r\n     * @type {object} Contains the DOM elements of every rendered button, the key being the button's layout name (e.g.: \"{enter}\").\r\n     */\r\n    this.buttonElements = {};\r\n\r\n    /**\r\n     * Rendering keyboard\r\n     */\r\n    if (this.keyboardDOM) this.render();\r\n    else {\r\n      console.warn(`\"${keyboardDOMQuery}\" was not found in the DOM.`);\r\n      throw new Error(\"KEYBOARD_DOM_ERROR\");\r\n    }\r\n\r\n    /**\r\n     * Saving instance\r\n     * This enables multiple simple-keyboard support with easier management\r\n     */\r\n    if (!window[\"SimpleKeyboardInstances\"])\r\n      window[\"SimpleKeyboardInstances\"] = {};\r\n\r\n    window[\"SimpleKeyboardInstances\"][\r\n      this.utilities.camelCase(this.keyboardDOMClass)\r\n    ] = this;\r\n\r\n    /**\r\n     * Physical Keyboard support\r\n     */\r\n    this.physicalKeyboardInterface = new PhysicalKeyboard(this);\r\n\r\n    /**\r\n     * Modules\r\n     */\r\n    this.modules = {};\r\n    this.loadModules();\r\n  }\r\n\r\n  /**\r\n   * Handles clicks made to keyboard buttons\r\n   * @param  {string} button The button's layout name.\r\n   */\r\n  handleButtonClicked(button) {\r\n    let debug = this.options.debug;\r\n\r\n    /**\r\n     * Ignoring placeholder buttons\r\n     */\r\n    if (button === \"{//}\") return false;\r\n\r\n    /**\r\n     * Calling onKeyPress\r\n     */\r\n    if (typeof this.options.onKeyPress === \"function\")\r\n      this.options.onKeyPress(button);\r\n\r\n    if (!this.input[this.options.inputName])\r\n      this.input[this.options.inputName] = \"\";\r\n\r\n    let updatedInput = this.utilities.getUpdatedInput(\r\n      button,\r\n      this.input[this.options.inputName],\r\n      this.options,\r\n      this.caretPosition\r\n    );\r\n\r\n    if (\r\n      // If input will change as a result of this button press\r\n      this.input[this.options.inputName] !== updatedInput &&\r\n      // This pertains to the \"inputPattern\" option:\r\n      // If inputPattern isn't set\r\n      (!this.options.inputPattern ||\r\n        // Or, if it is set and if the pattern is valid - we proceed.\r\n        (this.options.inputPattern && this.inputPatternIsValid(updatedInput)))\r\n    ) {\r\n      /**\r\n       * If maxLength and handleMaxLength yield true, halting\r\n       */\r\n      if (\r\n        this.options.maxLength &&\r\n        this.utilities.handleMaxLength(this.input, this.options, updatedInput)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      this.input[this.options.inputName] = this.utilities.getUpdatedInput(\r\n        button,\r\n        this.input[this.options.inputName],\r\n        this.options,\r\n        this.caretPosition,\r\n        true\r\n      );\r\n\r\n      if (debug) console.log(\"Input changed:\", this.input);\r\n\r\n      /**\r\n       * Enforce syncInstanceInputs, if set\r\n       */\r\n      if (this.options.syncInstanceInputs) this.syncInstanceInputs(this.input);\r\n\r\n      /**\r\n       * Calling onChange\r\n       */\r\n      if (typeof this.options.onChange === \"function\")\r\n        this.options.onChange(this.input[this.options.inputName]);\r\n\r\n      /**\r\n       * Calling onChangeAll\r\n       */\r\n      if (typeof this.options.onChangeAll === \"function\")\r\n        this.options.onChangeAll(this.input);\r\n    }\r\n\r\n    if (debug) {\r\n      console.log(\"Key pressed:\", button);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles button mousedown\r\n   */\r\n  /* istanbul ignore next */\r\n  handleButtonMouseDown(button, e) {\r\n    /**\r\n     * Handle event options\r\n     */\r\n    if (this.options.preventMouseDownDefault) e.preventDefault();\r\n    if (this.options.stopMouseDownPropagation) e.stopPropagation();\r\n\r\n    /**\r\n     * @type {boolean} Whether the mouse is being held onKeyPress\r\n     */\r\n    this.isMouseHold = true;\r\n\r\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\r\n\r\n    if (this.holdTimeout) clearTimeout(this.holdTimeout);\r\n\r\n    /**\r\n     * @type {object} Time to wait until a key hold is detected\r\n     */\r\n    if (!this.options.disableButtonHold) {\r\n      this.holdTimeout = setTimeout(() => {\r\n        if (\r\n          this.isMouseHold &&\r\n          ((!button.includes(\"{\") && !button.includes(\"}\")) ||\r\n            button === \"{delete}\" ||\r\n            button === \"{backspace}\" ||\r\n            button === \"{bksp}\" ||\r\n            button === \"{space}\" ||\r\n            button === \"{tab}\")\r\n        ) {\r\n          if (this.options.debug) console.log(\"Button held:\", button);\r\n\r\n          this.handleButtonHold(button, e);\r\n        }\r\n        clearTimeout(this.holdTimeout);\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles button mouseup\r\n   */\r\n  handleButtonMouseUp() {\r\n    this.isMouseHold = false;\r\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\r\n  }\r\n\r\n  /**\r\n   * Handles button hold\r\n   */\r\n  /* istanbul ignore next */\r\n  handleButtonHold(button) {\r\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\r\n\r\n    /**\r\n     * @type {object} Timeout dictating the speed of key hold iterations\r\n     */\r\n    this.holdInteractionTimeout = setTimeout(() => {\r\n      if (this.isMouseHold) {\r\n        this.handleButtonClicked(button);\r\n        this.handleButtonHold(button);\r\n      } else {\r\n        clearTimeout(this.holdInteractionTimeout);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Send a command to all simple-keyboard instances (if you have several instances).\r\n   */\r\n  syncInstanceInputs() {\r\n    this.dispatch(instance => {\r\n      instance.replaceInput(this.input);\r\n      instance.caretPosition = this.caretPosition;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the keyboard’s input.\r\n   * @param {string} [inputName] optional - the internal input to select\r\n   */\r\n  clearInput(inputName) {\r\n    inputName = inputName || this.options.inputName;\r\n    this.input[inputName] = \"\";\r\n\r\n    /**\r\n     * Reset caretPosition\r\n     */\r\n    this.caretPosition = 0;\r\n\r\n    /**\r\n     * Enforce syncInstanceInputs, if set\r\n     */\r\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs(this.input);\r\n  }\r\n\r\n  /**\r\n   * Get the keyboard’s input (You can also get it from the onChange prop).\r\n   * @param  {string} [inputName] optional - the internal input to select\r\n   */\r\n  getInput(inputName) {\r\n    inputName = inputName || this.options.inputName;\r\n\r\n    /**\r\n     * Enforce syncInstanceInputs, if set\r\n     */\r\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs(this.input);\r\n\r\n    return this.input[inputName];\r\n  }\r\n\r\n  /**\r\n   * Set the keyboard’s input.\r\n   * @param  {string} input the input value\r\n   * @param  {string} inputName optional - the internal input to select\r\n   */\r\n  setInput(input, inputName) {\r\n    inputName = inputName || this.options.inputName;\r\n    this.input[inputName] = input;\r\n\r\n    /**\r\n     * Enforce syncInstanceInputs, if set\r\n     */\r\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs(this.input);\r\n  }\r\n\r\n  /**\r\n   * Replace the input object (`keyboard.input`)\r\n   * @param  {object} inputObj The input object\r\n   */\r\n  replaceInput(inputObj) {\r\n    this.input = inputObj;\r\n  }\r\n\r\n  /**\r\n   * Set new option or modify existing ones after initialization.\r\n   * @param  {object} options The options to set\r\n   */\r\n  setOptions(options) {\r\n    options = options || {};\r\n    this.options = Object.assign(this.options, options);\r\n\r\n    /**\r\n     * Some option changes require adjustments before re-render\r\n     */\r\n    this.onSetOptions(options);\r\n\r\n    /**\r\n     * Rendering\r\n     */\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Executing actions depending on changed options\r\n   * @param  {object} options The options to set\r\n   */\r\n  onSetOptions(options) {\r\n    if (options.inputName) {\r\n      /**\r\n       * inputName changed. This requires a caretPosition reset\r\n       */\r\n      if (this.options.debug) {\r\n        console.log(\"inputName changed. caretPosition reset.\");\r\n      }\r\n\r\n      this.caretPosition = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all keyboard rows and reset keyboard values.\r\n   * Used interally between re-renders.\r\n   */\r\n  clear() {\r\n    this.keyboardDOM.innerHTML = \"\";\r\n    this.keyboardDOM.className = this.keyboardDOMClass;\r\n    this.buttonElements = {};\r\n  }\r\n\r\n  /**\r\n   * Send a command to all simple-keyboard instances at once (if you have multiple instances).\r\n   * @param  {function(instance: object, key: string)} callback Function to run on every instance\r\n   */\r\n  dispatch(callback) {\r\n    if (!window[\"SimpleKeyboardInstances\"]) {\r\n      console.warn(\r\n        `SimpleKeyboardInstances is not defined. Dispatch cannot be called.`\r\n      );\r\n      throw new Error(\"INSTANCES_VAR_ERROR\");\r\n    }\r\n\r\n    return Object.keys(window[\"SimpleKeyboardInstances\"]).forEach(key => {\r\n      callback(window[\"SimpleKeyboardInstances\"][key], key);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds/Modifies an entry to the `buttonTheme`. Basically a way to add a class to a button.\r\n   * @param  {string} buttons List of buttons to select (separated by a space).\r\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\r\n   */\r\n  addButtonTheme(buttons, className) {\r\n    if (!className || !buttons) return false;\r\n\r\n    buttons.split(\" \").forEach(button => {\r\n      className.split(\" \").forEach(classNameItem => {\r\n        if (!this.options.buttonTheme) this.options.buttonTheme = [];\r\n\r\n        let classNameFound = false;\r\n\r\n        /**\r\n         * If class is already defined, we add button to class definition\r\n         */\r\n        this.options.buttonTheme.map(buttonTheme => {\r\n          if (buttonTheme.class.split(\" \").includes(classNameItem)) {\r\n            classNameFound = true;\r\n\r\n            let buttonThemeArray = buttonTheme.buttons.split(\" \");\r\n            if (!buttonThemeArray.includes(button)) {\r\n              classNameFound = true;\r\n              buttonThemeArray.push(button);\r\n              buttonTheme.buttons = buttonThemeArray.join(\" \");\r\n            }\r\n          }\r\n          return buttonTheme;\r\n        });\r\n\r\n        /**\r\n         * If class is not defined, we create a new entry\r\n         */\r\n        if (!classNameFound) {\r\n          this.options.buttonTheme.push({\r\n            class: classNameItem,\r\n            buttons: buttons\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Removes/Amends an entry to the `buttonTheme`. Basically a way to remove a class previously added to a button through buttonTheme or addButtonTheme.\r\n   * @param  {string} buttons List of buttons to select (separated by a space).\r\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\r\n   */\r\n  removeButtonTheme(buttons, className) {\r\n    /**\r\n     * When called with empty parameters, remove all button themes\r\n     */\r\n    if (!buttons && !className) {\r\n      this.options.buttonTheme = [];\r\n      this.render();\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * If buttons are passed and buttonTheme has items\r\n     */\r\n    if (\r\n      buttons &&\r\n      Array.isArray(this.options.buttonTheme) &&\r\n      this.options.buttonTheme.length\r\n    ) {\r\n      let buttonArray = buttons.split(\" \");\r\n      buttonArray.forEach((button, key) => {\r\n        this.options.buttonTheme.map((buttonTheme, index) => {\r\n          /**\r\n           * If className is set, we affect the buttons only for that class\r\n           * Otherwise, we afect all classes\r\n           */\r\n          if (\r\n            (className && className.includes(buttonTheme.class)) ||\r\n            !className\r\n          ) {\r\n            let filteredButtonArray = buttonTheme.buttons\r\n              .split(\" \")\r\n              .filter(item => item !== button);\r\n\r\n            /**\r\n             * If buttons left, return them, otherwise, remove button Theme\r\n             */\r\n            if (filteredButtonArray.length) {\r\n              buttonTheme.buttons = filteredButtonArray.join(\" \");\r\n            } else {\r\n              this.options.buttonTheme.splice(index, 1);\r\n              buttonTheme = null;\r\n            }\r\n          }\r\n\r\n          return buttonTheme;\r\n        });\r\n      });\r\n\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the DOM Element of a button. If there are several buttons with the same name, an array of the DOM Elements is returned.\r\n   * @param  {string} button The button layout name to select\r\n   */\r\n  getButtonElement(button) {\r\n    let output;\r\n\r\n    let buttonArr = this.buttonElements[button];\r\n    if (buttonArr) {\r\n      if (buttonArr.length > 1) {\r\n        output = buttonArr;\r\n      } else {\r\n        output = buttonArr[0];\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * This handles the \"inputPattern\" option\r\n   * by checking if the provided inputPattern passes\r\n   */\r\n  inputPatternIsValid(inputVal) {\r\n    let inputPatternRaw = this.options.inputPattern;\r\n    let inputPattern;\r\n\r\n    /**\r\n     * Check if input pattern is global or targeted to individual inputs\r\n     */\r\n    if (inputPatternRaw instanceof RegExp) {\r\n      inputPattern = inputPatternRaw;\r\n    } else {\r\n      inputPattern = inputPatternRaw[this.options.inputName];\r\n    }\r\n\r\n    if (inputPattern && inputVal) {\r\n      let didInputMatch = inputPattern.test(inputVal);\r\n\r\n      if (this.options.debug) {\r\n        console.log(\r\n          `inputPattern (\"${inputPattern}\"): ${\r\n            didInputMatch ? \"passed\" : \"did not pass!\"\r\n          }`\r\n        );\r\n      }\r\n\r\n      return didInputMatch;\r\n    } else {\r\n      /**\r\n       * inputPattern doesn't seem to be set for the current input, or input is empty. Pass.\r\n       */\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieves the current cursor position within a input or textarea (if any)\r\n   */\r\n  handleCaret() {\r\n    /**\r\n     * Only first instance should insall the caret handling events\r\n     */\r\n    this.caretPosition = null;\r\n    let simpleKeyboardInstances = window[\"SimpleKeyboardInstances\"];\r\n\r\n    if (\r\n      (simpleKeyboardInstances &&\r\n        Object.keys(simpleKeyboardInstances)[0] ===\r\n          this.utilities.camelCase(this.keyboardDOMClass)) ||\r\n      !simpleKeyboardInstances\r\n    ) {\r\n      if (this.options.debug) {\r\n        console.log(`Caret handling started (${this.keyboardDOMClass})`);\r\n      }\r\n\r\n      document.addEventListener(\"keyup\", this.caretEventHandler);\r\n      document.addEventListener(\"mouseup\", this.caretEventHandler);\r\n      document.addEventListener(\"touchend\", this.caretEventHandler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called by {@link handleCaret} when an event that warrants a cursor position update is triggered\r\n   */\r\n  caretEventHandler(event) {\r\n    let targetTagName;\r\n    if (event.target.tagName) {\r\n      targetTagName = event.target.tagName.toLowerCase();\r\n    }\r\n\r\n    this.dispatch(instance => {\r\n      if (instance.isMouseHold) {\r\n        instance.isMouseHold = false;\r\n      }\r\n\r\n      if (\r\n        (targetTagName === \"textarea\" || targetTagName === \"input\") &&\r\n        !instance.options.disableCaretPositioning\r\n      ) {\r\n        /**\r\n         * Tracks current cursor position\r\n         * As keys are pressed, text will be added/removed at that position within the input.\r\n         */\r\n        instance.caretPosition = event.target.selectionStart;\r\n\r\n        if (instance.options.debug) {\r\n          console.log(\r\n            \"Caret at: \",\r\n            event.target.selectionStart,\r\n            event.target.tagName.toLowerCase(),\r\n            `(${instance.keyboardDOMClass})`\r\n          );\r\n        }\r\n      } else if (instance.options.disableCaretPositioning) {\r\n        /**\r\n         * If we toggled off disableCaretPositioning, we must ensure caretPosition doesn't persist once reactivated.\r\n         */\r\n        instance.caretPosition = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Destroy keyboard listeners and DOM elements\r\n   */\r\n  destroy() {\r\n    /**\r\n     * Remove listeners\r\n     */\r\n    document.removeEventListener(\"keyup\", this.caretEventHandler);\r\n    document.removeEventListener(\"mouseup\", this.caretEventHandler);\r\n    document.removeEventListener(\"touchend\", this.caretEventHandler);\r\n\r\n    /**\r\n     * Clear DOM\r\n     */\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * Process buttonTheme option\r\n   */\r\n  getButtonTheme() {\r\n    let buttonThemesParsed = {};\r\n\r\n    this.options.buttonTheme.forEach(themeObj => {\r\n      if (themeObj.buttons && themeObj.class) {\r\n        let themeButtons;\r\n\r\n        if (typeof themeObj.buttons === \"string\") {\r\n          themeButtons = themeObj.buttons.split(\" \");\r\n        }\r\n\r\n        if (themeButtons) {\r\n          themeButtons.forEach(themeButton => {\r\n            let themeParsed = buttonThemesParsed[themeButton];\r\n\r\n            // If the button has already been added\r\n            if (themeParsed) {\r\n              // Making sure we don't add duplicate classes, even when buttonTheme has duplicates\r\n              if (\r\n                !this.utilities.countInArray(\r\n                  themeParsed.split(\" \"),\r\n                  themeObj.class\r\n                )\r\n              ) {\r\n                buttonThemesParsed[\r\n                  themeButton\r\n                ] = `${themeParsed} ${themeObj.class}`;\r\n              }\r\n            } else {\r\n              buttonThemesParsed[themeButton] = themeObj.class;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        console.warn(\r\n          `buttonTheme row is missing the \"buttons\" or the \"class\". Please check the documentation.`\r\n        );\r\n      }\r\n    });\r\n\r\n    return buttonThemesParsed;\r\n  }\r\n\r\n  onTouchDeviceDetected() {\r\n    /**\r\n     * Processing autoTouchEvents\r\n     */\r\n    this.processAutoTouchEvents();\r\n\r\n    /**\r\n     * Disabling contextual window on touch devices\r\n     */\r\n    this.disableContextualWindow();\r\n  }\r\n\r\n  /**\r\n   * Disabling contextual window for hg-button\r\n   */\r\n  /* istanbul ignore next */\r\n  disableContextualWindow() {\r\n    window.oncontextmenu = event => {\r\n      if (event.target.classList.contains(\"hg-button\")) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Process autoTouchEvents option\r\n   */\r\n  processAutoTouchEvents() {\r\n    if (this.options.autoUseTouchEvents) {\r\n      this.options.useTouchEvents = true;\r\n\r\n      if (this.options.debug) {\r\n        console.log(\r\n          `autoUseTouchEvents: Touch device detected, useTouchEvents enabled.`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\r\n   */\r\n  onInit() {\r\n    if (this.options.debug) {\r\n      console.log(`${this.keyboardDOMClass} Initialized`);\r\n    }\r\n\r\n    /**\r\n     * Caret handling\r\n     */\r\n    this.handleCaret();\r\n\r\n    if (typeof this.options.onInit === \"function\") this.options.onInit();\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function before a simple-keyboard render.\r\n   */\r\n  beforeFirstRender() {\r\n    /**\r\n     * Performing actions when touch device detected\r\n     */\r\n    if (this.utilities.isTouchDevice()) {\r\n      this.onTouchDeviceDetected();\r\n    }\r\n\r\n    if (typeof this.options.beforeFirstRender === \"function\")\r\n      this.options.beforeFirstRender();\r\n\r\n    /**\r\n     * Notify about PointerEvents usage\r\n     */\r\n    if (\r\n      this.utilities.pointerEventsSupported() &&\r\n      !this.options.useTouchEvents &&\r\n      !this.options.useMouseEvents\r\n    ) {\r\n      if (this.options.debug) {\r\n        console.log(\"Using PointerEvents as it is supported by this browser\");\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Notify about touch events usage\r\n     */\r\n    if (this.options.useTouchEvents) {\r\n      if (this.options.debug) {\r\n        console.log(\r\n          \"useTouchEvents has been enabled. Only touch events will be used.\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function before a simple-keyboard render.\r\n   */\r\n  beforeRender() {\r\n    if (typeof this.options.beforeRender === \"function\")\r\n      this.options.beforeRender();\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\r\n   */\r\n  onRender() {\r\n    if (typeof this.options.onRender === \"function\") this.options.onRender();\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function once all modules have been loaded\r\n   */\r\n  onModulesLoaded() {\r\n    if (typeof this.options.onModulesLoaded === \"function\")\r\n      this.options.onModulesLoaded();\r\n  }\r\n\r\n  /**\r\n   * Register module\r\n   */\r\n  registerModule = (name, initCallback) => {\r\n    if (!this.modules[name]) this.modules[name] = {};\r\n\r\n    initCallback(this.modules[name]);\r\n  };\r\n\r\n  /**\r\n   * Load modules\r\n   */\r\n  loadModules() {\r\n    if (Array.isArray(this.options.modules)) {\r\n      this.options.modules.forEach(Module => {\r\n        let module = new Module();\r\n\r\n        /* istanbul ignore next */\r\n        if (module.constructor.name && module.constructor.name !== \"Function\") {\r\n          let classStr = `module-${this.utilities.camelCase(\r\n            module.constructor.name\r\n          )}`;\r\n          this.keyboardPluginClasses =\r\n            this.keyboardPluginClasses + ` ${classStr}`;\r\n        }\r\n\r\n        module.init(this);\r\n      });\r\n\r\n      this.keyboardPluginClasses =\r\n        this.keyboardPluginClasses + \" modules-loaded\";\r\n\r\n      this.render();\r\n      this.onModulesLoaded();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get module prop\r\n   */\r\n  getModuleProp(name, prop) {\r\n    if (!this.modules[name]) return false;\r\n\r\n    return this.modules[name][prop];\r\n  }\r\n\r\n  /**\r\n   * getModulesList\r\n   */\r\n  getModulesList() {\r\n    return Object.keys(this.modules);\r\n  }\r\n\r\n  /**\r\n   * Parse Row DOM containers\r\n   */\r\n  parseRowDOMContainers(\r\n    rowDOM,\r\n    rowIndex,\r\n    containerStartIndexes,\r\n    containerEndIndexes\r\n  ) {\r\n    let rowDOMArray = Array.from(rowDOM.children);\r\n    let removedElements = 0;\r\n\r\n    if (rowDOMArray.length) {\r\n      containerStartIndexes.forEach((startIndex, arrIndex) => {\r\n        let endIndex = containerEndIndexes[arrIndex];\r\n\r\n        /**\r\n         * If there exists a respective end index\r\n         * if end index comes after start index\r\n         */\r\n        if (!endIndex || !(endIndex > startIndex)) {\r\n          return false;\r\n        }\r\n\r\n        /**\r\n         * Updated startIndex, endIndex\r\n         * This is since the removal of buttons to place a single button container\r\n         * results in a modified array size\r\n         */\r\n        let updated_startIndex = startIndex - removedElements;\r\n        let updated_endIndex = endIndex - removedElements;\r\n\r\n        /**\r\n         * Create button container\r\n         */\r\n        let containerDOM = document.createElement(\"div\");\r\n        containerDOM.className += \"hg-button-container\";\r\n        let containerUID = `${this.options.layoutName}-r${rowIndex}c${arrIndex}`;\r\n        containerDOM.setAttribute(\"data-skUID\", containerUID);\r\n\r\n        /**\r\n         * Taking elements due to be inserted into container\r\n         */\r\n        let containedElements = rowDOMArray.splice(\r\n          updated_startIndex,\r\n          updated_endIndex - updated_startIndex + 1\r\n        );\r\n        removedElements = updated_endIndex - updated_startIndex;\r\n\r\n        /**\r\n         * Inserting elements to container\r\n         */\r\n        containedElements.forEach(element => containerDOM.appendChild(element));\r\n\r\n        /**\r\n         * Adding container at correct position within rowDOMArray\r\n         */\r\n        rowDOMArray.splice(updated_startIndex, 0, containerDOM);\r\n\r\n        /**\r\n         * Clearing old rowDOM children structure\r\n         */\r\n        rowDOM.innerHTML = \"\";\r\n\r\n        /**\r\n         * Appending rowDOM new children list\r\n         */\r\n        rowDOMArray.forEach(element => rowDOM.appendChild(element));\r\n\r\n        if (this.options.debug) {\r\n          console.log(\r\n            \"rowDOMContainer\",\r\n            containedElements,\r\n            updated_startIndex,\r\n            updated_endIndex,\r\n            removedElements + 1\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    return rowDOM;\r\n  }\r\n\r\n  /**\r\n   * Renders rows and buttons as per options\r\n   */\r\n  render() {\r\n    /**\r\n     * Clear keyboard\r\n     */\r\n    this.clear();\r\n\r\n    /**\r\n     * Calling beforeFirstRender\r\n     */\r\n    if (!this.initialized) {\r\n      this.beforeFirstRender();\r\n    }\r\n\r\n    /**\r\n     * Calling beforeRender\r\n     */\r\n    this.beforeRender();\r\n\r\n    let layoutClass = `hg-layout-${this.options.layoutName}`;\r\n    let layout = this.options.layout || KeyboardLayout.getDefaultLayout();\r\n    let useTouchEvents = this.options.useTouchEvents || false;\r\n    let useTouchEventsClass = useTouchEvents ? \"hg-touch-events\" : \"\";\r\n    let useMouseEvents = this.options.useMouseEvents || false;\r\n    let disableRowButtonContainers = this.options.disableRowButtonContainers;\r\n\r\n    /**\r\n     * Account for buttonTheme, if set\r\n     */\r\n    let buttonThemesParsed = Array.isArray(this.options.buttonTheme)\r\n      ? this.getButtonTheme()\r\n      : {};\r\n\r\n    /**\r\n     * Adding themeClass, layoutClass to keyboardDOM\r\n     */\r\n    this.keyboardDOM.className += ` ${this.options.theme} ${layoutClass} ${this.keyboardPluginClasses} ${useTouchEventsClass}`;\r\n\r\n    /**\r\n     * Iterating through each row\r\n     */\r\n    layout[this.options.layoutName].forEach((row, rIndex) => {\r\n      let rowArray = row.split(\" \");\r\n\r\n      /**\r\n       * Creating empty row\r\n       */\r\n      let rowDOM = document.createElement(\"div\");\r\n      rowDOM.className += \"hg-row\";\r\n\r\n      /**\r\n       * Tracking container indicators in rows\r\n       */\r\n      let containerStartIndexes = [];\r\n      let containerEndIndexes = [];\r\n\r\n      /**\r\n       * Iterating through each button in row\r\n       */\r\n      rowArray.forEach((button, bIndex) => {\r\n        /**\r\n         * Check if button has a container indicator\r\n         */\r\n        let buttonHasContainerStart =\r\n          !disableRowButtonContainers &&\r\n          button.includes(\"[\") &&\r\n          button.length > 1;\r\n        let buttonHasContainerEnd =\r\n          !disableRowButtonContainers &&\r\n          button.includes(\"]\") &&\r\n          button.length > 1;\r\n\r\n        /**\r\n         * Save container start index, if applicable\r\n         */\r\n        if (buttonHasContainerStart) {\r\n          containerStartIndexes.push(bIndex);\r\n\r\n          /**\r\n           * Removing indicator\r\n           */\r\n          button = button.replace(/\\[/g, \"\");\r\n        }\r\n\r\n        if (buttonHasContainerEnd) {\r\n          containerEndIndexes.push(bIndex);\r\n\r\n          /**\r\n           * Removing indicator\r\n           */\r\n          button = button.replace(/\\]/g, \"\");\r\n        }\r\n\r\n        /**\r\n         * Processing button options\r\n         */\r\n        let fctBtnClass = this.utilities.getButtonClass(button);\r\n        let buttonThemeClass = buttonThemesParsed[button];\r\n        let buttonDisplayName = this.utilities.getButtonDisplayName(\r\n          button,\r\n          this.options.display,\r\n          this.options.mergeDisplay\r\n        );\r\n\r\n        /**\r\n         * Creating button\r\n         */\r\n        let buttonType = this.options.useButtonTag ? \"button\" : \"div\";\r\n        let buttonDOM = document.createElement(buttonType);\r\n        buttonDOM.className += `hg-button ${fctBtnClass}${\r\n          buttonThemeClass ? \" \" + buttonThemeClass : \"\"\r\n        }`;\r\n\r\n        /**\r\n         * Handle button click event\r\n         */\r\n        /* istanbul ignore next */\r\n        if (\r\n          this.utilities.pointerEventsSupported() &&\r\n          !useTouchEvents &&\r\n          !useMouseEvents\r\n        ) {\r\n          /**\r\n           * Handle PointerEvents\r\n           */\r\n          buttonDOM.onpointerdown = e => {\r\n            this.handleButtonClicked(button);\r\n            this.handleButtonMouseDown(button, e);\r\n          };\r\n          buttonDOM.onpointerup = e => {\r\n            this.handleButtonMouseUp();\r\n          };\r\n          buttonDOM.onpointercancel = e => this.handleButtonMouseUp();\r\n        } else {\r\n          /**\r\n           * Fallback for browsers not supporting PointerEvents\r\n           */\r\n          if (useTouchEvents) {\r\n            /**\r\n             * Handle touch events\r\n             */\r\n            buttonDOM.ontouchstart = e => {\r\n              this.handleButtonClicked(button);\r\n              this.handleButtonMouseDown(button, e);\r\n            };\r\n            buttonDOM.ontouchend = e => this.handleButtonMouseUp();\r\n            buttonDOM.ontouchcancel = e => this.handleButtonMouseUp();\r\n          } else {\r\n            /**\r\n             * Handle mouse events\r\n             */\r\n            buttonDOM.onclick = () => {\r\n              this.isMouseHold = false;\r\n              this.handleButtonClicked(button);\r\n            };\r\n            buttonDOM.onmousedown = e => {\r\n              this.handleButtonMouseDown(button, e);\r\n            };\r\n          }\r\n        }\r\n\r\n        /**\r\n         * Adding identifier\r\n         */\r\n        buttonDOM.setAttribute(\"data-skBtn\", button);\r\n\r\n        /**\r\n         * Adding unique id\r\n         * Since there's no limit on spawning same buttons, the unique id ensures you can style every button\r\n         */\r\n        let buttonUID = `${this.options.layoutName}-r${rIndex}b${bIndex}`;\r\n        buttonDOM.setAttribute(\"data-skBtnUID\", buttonUID);\r\n\r\n        /**\r\n         * Adding display label\r\n         */\r\n        buttonDOM.setAttribute(\"data-displayLabel\", buttonDisplayName);\r\n\r\n        /**\r\n         * Adding button label to button\r\n         */\r\n        let buttonSpanDOM = document.createElement(\"span\");\r\n        buttonSpanDOM.innerHTML = buttonDisplayName;\r\n        buttonDOM.appendChild(buttonSpanDOM);\r\n\r\n        /**\r\n         * Adding to buttonElements\r\n         */\r\n        if (!this.buttonElements[button]) this.buttonElements[button] = [];\r\n\r\n        this.buttonElements[button].push(buttonDOM);\r\n\r\n        /**\r\n         * Appending button to row\r\n         */\r\n        rowDOM.appendChild(buttonDOM);\r\n      });\r\n\r\n      /**\r\n       * Parse containers in row\r\n       */\r\n      rowDOM = this.parseRowDOMContainers(\r\n        rowDOM,\r\n        rIndex,\r\n        containerStartIndexes,\r\n        containerEndIndexes\r\n      );\r\n\r\n      /**\r\n       * Appending row to keyboard\r\n       */\r\n      this.keyboardDOM.appendChild(rowDOM);\r\n    });\r\n\r\n    /**\r\n     * Calling onRender\r\n     */\r\n    this.onRender();\r\n\r\n    if (!this.initialized) {\r\n      /**\r\n       * Ensures that onInit and beforeFirstRender are only called once per instantiation\r\n       */\r\n      this.initialized = true;\r\n\r\n      /**\r\n       * Handling onpointerup\r\n       */\r\n      /* istanbul ignore next */\r\n      if (\r\n        this.utilities.pointerEventsSupported() &&\r\n        !useTouchEvents &&\r\n        !useMouseEvents\r\n      ) {\r\n        document.onpointerup = () => this.handleButtonMouseUp();\r\n      } else if (useTouchEvents) {\r\n        /**\r\n         * Handling ontouchend, ontouchcancel\r\n         */\r\n        document.ontouchend = e => this.handleButtonMouseUp();\r\n        document.ontouchcancel = e => this.handleButtonMouseUp();\r\n      } else if (!useTouchEvents) {\r\n        /**\r\n         * Handling mouseup\r\n         */\r\n        document.onmouseup = () => this.handleButtonMouseUp();\r\n      }\r\n\r\n      /**\r\n       * Calling onInit\r\n       */\r\n      this.onInit();\r\n    }\r\n  }\r\n}\r\n\r\nexport default SimpleKeyboard;\r\n","import SimpleKeyboard from \"./components/Keyboard\";\r\nexport default SimpleKeyboard;\r\n","import Keyboard from \"simple-keyboard\";\nimport \"simple-keyboard/build/css/index.css\";\nimport \"./index.css\";\n\nlet keyboard = new Keyboard({\n  onChange: input => onChange(input),\n  onKeyPress: button => onKeyPress(button)\n});\n\n/**\n * Update simple-keyboard when input is changed directly\n */\ndocument.querySelector(\".input\").addEventListener(\"input\", event => {\n  keyboard.setInput(event.target.value);\n});\n\nconsole.log(keyboard);\n\nfunction onChange(input) {\n  document.querySelector(\".input\").value = input;\n  console.log(\"Input changed\", input);\n}\n\nfunction onKeyPress(button) {\n  console.log(\"Button pressed\", button);\n\n  /**\n   * If you want to handle the shift and caps lock buttons\n   */\n  if (button === \"{shift}\" || button === \"{lock}\") handleShift();\n}\n\nfunction handleShift() {\n  let currentLayout = keyboard.options.layoutName;\n  let shiftToggle = currentLayout === \"default\" ? \"shift\" : \"default\";\n\n  keyboard.setOptions({\n    layoutName: shiftToggle\n  });\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}